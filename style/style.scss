@mixin translate ($posX: -50%, $posY: -50%, $deg: 0) {
    transform: translate($posX, $posY) rotate($deg + deg);
}

@mixin relationCenter ($posX: -50%, $posY: -50%) {
    position: relative;
    top: 50%;
    left: 50%;
    // transform: translate(-50%,-50%);
    @include translate()
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    height: 100vh;
}

.square {
    $squareWidth: 100px;
    width: $squareWidth;
    height: $squareWidth;
    background-color: red;
    transition: all 1s ease-in;
    @include relationCenter ();

    &__triagle {
        width: 0;
        height: 0;
        border-left: 50px solid transparent;
        border-right: 50px solid transparent;
        border-bottom: 100px solid blue;
        position: absolute;
        top: 0;
        left: 0;
        transition: all 1s ease-out;

        &_top {
            transform: rotate(0deg);
        }

        &_right {
            transform: rotate(90deg);
        }

        &_down {
            transform: rotate(180deg);
        }



        &_left {
            transform: rotate(-90deg);
        }
    }


    input {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        z-index: 1;
    }

    &:has(input:checked) {
        background-color: blueviolet;
        animation: around 1s normal infinite linear;

        .square__triagle {
            border-bottom: 100px solid blueviolet;

            &_top {
                @include translate (0, -100%, 0)
            }

            &_right {
                @include translate (100%, 0, 90)
            }

            &_down {
                @include translate (0, 100%, 180)
            }

            &_left {
                @include translate (-100%, 0, -90)
            }
        }
    }
}

@keyframes around {
    0% {
        border-radius: 0;
        @include translate(-50%, 50%, 0);
    }

    25% {
        border-radius: 25%;
        @include translate(-50%, 50%, 90);
    }


    50% {
        border-radius: 50%;
        @include translate(-50%, 50%, 180);
    }

    75% {
        border-radius: 25%;
        @include translate(-50%, 50%, 270);
    }

    100% {
        border-radius: 0%;
        @include translate(-50%, 50%, 360);
    }
}

// @keyframes around {
//     from {
//         border-radius: 50%;
//         @include translate(-50%, 50%, 0);
//     }

//     to {
//         border-radius: 50%;
//         @include translate(-50%, 50%, 360);
//     }
// }


// .flex {
//     display: flex;
//     flex-direction: row;

//     &-item1 {
//         width: 300px;
//         background-color: red;
//     }
//     &-item2 {
//         background-color: aqua;
//         flex-grow: 1;
//     }
//     &-item3 {
//         width: 100px;
//         background-color: blue;
//     }

// }

.grid {
    display: grid;
    // grid-template-columns: 100px 100px 100px;
    // grid-template-columns: repeat(3, 100px);
    // grid-template-columns: 300px 1fr 100px;
    // grid-template-columns: 1fr 1fr 1fr;
    // grid-template-columns: repeat(3, 1fr);
    // grid-template-columns: min-content 300px max-content;
    // grid-template-columns: 1fr 200px minmax(150px, 300px,);
    // grid-template-columns: repeat(3, minmax(150px, 300px));
    // grid-template-columns: minmax(150px, 300px) minmax(150px, 300px) minmax(150px, 1fr);
    column-gap: 10px;
    // grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);



    &-item1 {
        background-color: red;
        // grid-column-start: ;
        // grid-column-end: ;
        // grid-row-start: ;
        // grid-row-end: ;
        grid-column: 3 / 4;
        grid-row: 3 / 4;
        /////////
        // grid-row-start
        // grid-column-start
        // grid-row-end
        // grid-column-end
        grid-area: 3 / 3 / 4 /4;
    }

    &-item2 {
        background-color: aqua;
    }

    &-item3 {
        background-color: blue;
        // grid-column-start: 3;
        // grid-column-end: 4;
        // grid-row-start: 3;
        // grid-row-end: 4;
    }
}

.gridd {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-rows: repeat(3, 1fr);
    grid-gap: 10px;


    &-item1 {
        background-color: aqua;
        grid-area: 1 / 1 / 2 / 2;
    }

    &-item2 {
        background-color: red;
        grid-area: 1 / 2 / 2 / 3;
    }

    &-item3 {
        background-color: olive;
        grid-area: 1 / 3 / 3 / 5;
    }

    &-item4 {
        background-color: peru;
        grid-area: 2 / 1 / 3 / 3;
    }

    &-item5 {
        background-color: hotpink;
        grid-area: 3 / 1 / 4 / 2;
    }

    &-item6 {
        background-color: gold;
        grid-area: 3 / 2 / 4 / 5;
    }
}